<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 目标类 -->
    <bean id="customerDao" class="com.simple.first.dao.CustomerDaoImpl"/>
    <!-- 切面类 -->
    <bean id="myAspectXmlAspectJ" class="com.simple.first.Aspect.MyAspect_XmlAspectJ"></bean>
    <!-- AOP编程 -->
    <aop:config>
        <aop:aspect ref="myAspectXmlAspectJ">
            <!-- 配置切入点 通知最后增强哪些方法 -->
            <!-- 增强 com.simple.first.dao 包下所有的方法 -->
            <aop:pointcut expression="execution( * com.simple.first.dao.*.*(..) )" id="myPointCut"/>
            <!-- 前置通知 关联通知advice和切入点 -->
            <aop:before method="myBefore" pointcut-ref="myPointCut"/>
            <!-- 后置通知 在方法返回后执行，就可以获得返回值returning属性 -->
            <aop:after-returning method="myAfterReturning" pointcut-ref="myPointCut" returning="joinPoint"/>
            <!-- 环绕通知 -->
            <aop:around method="myAround" pointcut-ref="myPointCut"/>
            <!-- 抛出通知：用于处理程序发生的异常可以接受当前方法产生的异常 -->
            <!-- 注意：如果程序没有异常，则不会执行增强 -->
            <!-- throwing属性：用于设置通知第二个参数的名称，类型throwable -->
            <aop:after-throwing method="myAfterThrowing" pointcut-ref="myPointCut" throwing="e"/>
            <!-- 最终通知：无论程序发生任何事情都将执行 -->
            <aop:after method="myAfter" pointcut-ref="myPointCut"/>
        </aop:aspect>
    </aop:config>
</beans>